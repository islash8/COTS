Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/8.3.0/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/8.3.0/../../../../avr/lib/avr5/crtatmega32.o (exit)
/usr/lib/gcc/avr/8.3.0/avr5/libgcc.a(_umulhisi3.o)
                              ./Lib_Delay.o (__umulhisi3)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/8.3.0/../../../../avr/lib/avr5/crtatmega32.o
LOAD ./Lib_Delay.o
LOAD ./MCU_Prog.o
LOAD ./main.o
START GROUP
LOAD /usr/lib/gcc/avr/8.3.0/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/8.3.0/../../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/8.3.0/../../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/8.3.0/../../../../avr/lib/avr5/libatmega32.a
END GROUP
                0x0000000000020000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x20000
                0x000000000000ffa0                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                0x0000000000010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                0x0000000000000400                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x1d4
 *(.vectors)
 .vectors       0x0000000000000000       0x54 /usr/lib/gcc/avr/8.3.0/../../../../avr/lib/avr5/crtatmega32.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000054                . = ALIGN (0x2)
                0x0000000000000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000054        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000054                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem.*)
                0x0000000000000054                . = ALIGN (0x2)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000054                __ctors_start = .
 *(.ctors)
                0x0000000000000054                __ctors_end = .
                0x0000000000000054                __dtors_start = .
 *(.dtors)
                0x0000000000000054                __dtors_end = .
 SORT_BY_NAME(*)(.ctors)
 SORT_BY_NAME(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000054        0x0 /usr/lib/gcc/avr/8.3.0/../../../../avr/lib/avr5/crtatmega32.o
                0x0000000000000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000054        0xc /usr/lib/gcc/avr/8.3.0/../../../../avr/lib/avr5/crtatmega32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000060        0x8 /usr/lib/gcc/avr/8.3.0/../../../../avr/lib/avr5/crtatmega32.o
 *(.init9)
 *(.text)
 .text          0x0000000000000068        0x4 /usr/lib/gcc/avr/8.3.0/../../../../avr/lib/avr5/crtatmega32.o
                0x0000000000000068                __vector_1
                0x0000000000000068                __vector_12
                0x0000000000000068                __bad_interrupt
                0x0000000000000068                __vector_6
                0x0000000000000068                __vector_3
                0x0000000000000068                __vector_11
                0x0000000000000068                __vector_13
                0x0000000000000068                __vector_17
                0x0000000000000068                __vector_19
                0x0000000000000068                __vector_7
                0x0000000000000068                __vector_5
                0x0000000000000068                __vector_4
                0x0000000000000068                __vector_9
                0x0000000000000068                __vector_2
                0x0000000000000068                __vector_15
                0x0000000000000068                __vector_8
                0x0000000000000068                __vector_14
                0x0000000000000068                __vector_10
                0x0000000000000068                __vector_16
                0x0000000000000068                __vector_18
                0x0000000000000068                __vector_20
 .text          0x000000000000006c        0x0 ./Lib_Delay.o
 .text          0x000000000000006c        0x0 ./MCU_Prog.o
 .text          0x000000000000006c        0x0 ./main.o
 .text          0x000000000000006c        0x0 /usr/lib/gcc/avr/8.3.0/avr5/libgcc.a(_exit.o)
 .text          0x000000000000006c        0x0 /usr/lib/gcc/avr/8.3.0/avr5/libgcc.a(_umulhisi3.o)
                0x000000000000006c                . = ALIGN (0x2)
 *(.text.*)
 .text.Lib_vDelayMs
                0x000000000000006c       0xa2 ./Lib_Delay.o
                0x000000000000006c                Lib_vDelayMs
 .text.Lib_vDelayUs
                0x000000000000010e       0x56 ./Lib_Delay.o
                0x000000000000010e                Lib_vDelayUs
 .text.MCU_vEnableGlobalInterrupt
                0x0000000000000164       0x22 ./MCU_Prog.o
                0x0000000000000164                MCU_vEnableGlobalInterrupt
 .text.MCU_vDisableGlobalInterrupt
                0x0000000000000186       0x22 ./MCU_Prog.o
                0x0000000000000186                MCU_vDisableGlobalInterrupt
 .text.main     0x00000000000001a8        0xa ./main.o
                0x00000000000001a8                main
 .text.libgcc.mul
                0x00000000000001b2        0x0 /usr/lib/gcc/avr/8.3.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000001b2        0x0 /usr/lib/gcc/avr/8.3.0/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000001b2        0x0 /usr/lib/gcc/avr/8.3.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000001b2        0x0 /usr/lib/gcc/avr/8.3.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000001b2        0x0 /usr/lib/gcc/avr/8.3.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000001b2        0x0 /usr/lib/gcc/avr/8.3.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000001b2        0x0 /usr/lib/gcc/avr/8.3.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000001b2       0x1e /usr/lib/gcc/avr/8.3.0/avr5/libgcc.a(_umulhisi3.o)
                0x00000000000001b2                __umulhisi3
 .text.libgcc.div
                0x00000000000001d0        0x0 /usr/lib/gcc/avr/8.3.0/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc   0x00000000000001d0        0x0 /usr/lib/gcc/avr/8.3.0/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.prologue
                0x00000000000001d0        0x0 /usr/lib/gcc/avr/8.3.0/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.builtins
                0x00000000000001d0        0x0 /usr/lib/gcc/avr/8.3.0/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.fmul
                0x00000000000001d0        0x0 /usr/lib/gcc/avr/8.3.0/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.fixed
                0x00000000000001d0        0x0 /usr/lib/gcc/avr/8.3.0/avr5/libgcc.a(_umulhisi3.o)
                0x00000000000001d0                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000001d0        0x0 /usr/lib/gcc/avr/8.3.0/avr5/libgcc.a(_exit.o)
                0x00000000000001d0                exit
                0x00000000000001d0                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000001d0        0x4 /usr/lib/gcc/avr/8.3.0/avr5/libgcc.a(_exit.o)
 *(.fini0)
 *(.hightext)
 *(.hightext*)
 *(.progmemx.*)
                0x00000000000001d4                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
                0x00000000000001d4                _etext = .

.data           0x0000000000800060        0x0 load address 0x00000000000001d4
                [!provide]                        PROVIDE (__data_start = .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/8.3.0/../../../../avr/lib/avr5/crtatmega32.o
 .data          0x0000000000800060        0x0 ./Lib_Delay.o
 .data          0x0000000000800060        0x0 ./MCU_Prog.o
 .data          0x0000000000800060        0x0 ./main.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/8.3.0/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/8.3.0/avr5/libgcc.a(_umulhisi3.o)
 *(.data*)
 *(.gnu.linkonce.d*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.r*)
                0x0000000000800060                . = ALIGN (0x2)
                0x0000000000800060                _edata = .
                [!provide]                        PROVIDE (__data_end = .)

.bss            0x0000000000800060        0x0
                [!provide]                        PROVIDE (__bss_start = .)
 *(.bss)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/8.3.0/../../../../avr/lib/avr5/crtatmega32.o
 .bss           0x0000000000800060        0x0 ./Lib_Delay.o
 .bss           0x0000000000800060        0x0 ./MCU_Prog.o
 .bss           0x0000000000800060        0x0 ./main.o
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/8.3.0/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/8.3.0/avr5/libgcc.a(_umulhisi3.o)
 *(.bss*)
 *(COMMON)
                [!provide]                        PROVIDE (__bss_end = .)
                0x00000000000001d4                __data_load_start = LOADADDR (.data)
                0x00000000000001d4                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800060        0x0
                [!provide]                        PROVIDE (__noinit_start = .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end = .)
                0x0000000000800060                _end = .
                [!provide]                        PROVIDE (__heap_start = .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0xa2c
 *(.stab)
 .stab          0x0000000000000000      0x4a4 ./Lib_Delay.o
 .stab          0x00000000000004a4      0x2e8 ./MCU_Prog.o
                                        0x36c (size before relaxing)
 .stab          0x000000000000078c      0x2a0 ./main.o
                                        0x2ac (size before relaxing)

.stabstr        0x0000000000000000      0x9fb
 *(.stabstr)
 .stabstr       0x0000000000000000      0x9fb ./Lib_Delay.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./Lib_Delay.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 ./MCU_Prog.o
 .comment       0x0000000000000011       0x12 ./main.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/8.3.0/../../../../avr/lib/avr5/crtatmega32.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x4e6
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x4e6 /usr/lib/gcc/avr/8.3.0/../../../../avr/lib/avr5/crtatmega32.o

.debug_abbrev   0x0000000000000000      0x4a3
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x4a3 /usr/lib/gcc/avr/8.3.0/../../../../avr/lib/avr5/crtatmega32.o

.debug_line     0x0000000000000000       0x1d
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1d /usr/lib/gcc/avr/8.3.0/../../../../avr/lib/avr5/crtatmega32.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x196
 *(.debug_str)
 .debug_str     0x0000000000000000      0x196 /usr/lib/gcc/avr/8.3.0/../../../../avr/lib/avr5/crtatmega32.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)
OUTPUT(MCU.elf elf32-avr)
LOAD linker stubs
